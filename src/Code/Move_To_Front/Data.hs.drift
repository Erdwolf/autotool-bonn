-- -*- mode: haskell -*-

module Code.Move_To_Front.Data where

import Reader
import ToDoc

import Data.Typeable

data Coding a = Coding { queue  :: a
		       , output :: [ Int ]
		       }
     deriving ( Eq, Ord, Typeable )

{-! for Coding derive: Reader, ToDoc !-}

instance ( ToDoc a  ) => Show ( Coding a ) where
    show = render . toDoc
instance ( Reader a ) => Read ( Coding a ) where 
    readsPrec = parsec_readsPrec



     