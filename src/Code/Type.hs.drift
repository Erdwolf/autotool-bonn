module Code.Type 

( module Code.Type
, module Data.FiniteMap
, module Sets
)

where

--  $Id$

import Data.FiniteMap
import TypeableFM

import Sets
import ToDoc

-- | FIXME: das ist unzusammenhängend

data Coder a b =
     Coder { nametag :: Doc
	   , encode :: [a] -> b
	   , decode :: b -> Maybe [a]
	   , decode_hint :: b -> [a]
	   }

type Frequency a = FiniteMap a Int

type Code a b = FiniteMap a [ b ]




