-- -*- mode: haskell -*-

module SAT.State where

-- $Id$

import SAT.Types

import ToDoc
import Reader

import Sets
import FiniteMap

data State = 
     State { assignment :: Belegung -- erfüllend
	   , formula  :: Formel -- soweit schon gebaut
	   , unfrequent :: [ Literal ] 
	   , morefrequent :: [ Literal ]
	   , dependencies :: FiniteMap Variable ( Set Variable )
	   }

{-! for State derive: ToDoc, Reader !-}

instance Show State where show = render . toDoc
instance Read State where readsPrec = parsec_readsPrec
