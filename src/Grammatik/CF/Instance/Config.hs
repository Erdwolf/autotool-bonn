{- Generated by AutoDrIFT (Automatic class derivations for Haskell) -}
{-# LINE 1 "Grammatik/CF/Instance/Config.hs.drift" #-}
-- -*- mode: haskell -*-

module Grammatik.CF.Instance.Config where

-- -- $Id$

import Language.Syntax
import Grammatik.Property

import Autolib.ToDoc
import Autolib.Reader
import Text.XML.HaXml.Haskell2Xml

import Data.Typeable

data Config =
     Config { lang :: Language.Syntax.Type
	    , properties :: [ Property ]
	    , yeah :: [ String ]
	    , noh :: [ String ]
	    }
     deriving ( Eq, Typeable )

{-! for Config derive: ToDoc, Reader, Haskell2Xml !-}

{-* Generated by DrIFT : Look, but Don't Touch. *-}
instance ToDoc Config where
    toDocPrec d (Config aa ab ac ad) = docParen (d >= 10)
	      (text "Config" <+> dutch_record
	       [text "lang" <+> equals <+> toDocPrec 0 aa,
		text "properties" <+> equals <+> toDocPrec 0 ab,
		text "yeah" <+> equals <+> toDocPrec 0 ac,
		text "noh" <+> equals <+> toDocPrec 0 ad])

instance Reader Config where
    readerPrec d = readerParen (d > 9)
	       ((do my_reserved "Config"
		    my_braces ((do my_reserved "lang"
				   my_equals
				   aa <- readerPrec 0
				   my_comma
				   my_reserved "properties"
				   my_equals
				   ab <- readerPrec 0
				   my_comma
				   my_reserved "yeah"
				   my_equals
				   ac <- readerPrec 0
				   my_comma
				   my_reserved "noh"
				   my_equals
				   ad <- readerPrec 0
				   return (Config aa ab ac ad)))))

instance Haskell2Xml Config where
    toHType v =
	Defined "Config" []
		[Constr "Config" [] [toHType aa,toHType ab,toHType ac,toHType ad]]
      where
	(Config aa ab ac ad) = v
    fromContents (CElem (Elem constr [] cs):etc)
	| "Config" `isPrefixOf` constr =
	    (\(aa,cs00)-> (\(ab,cs01)-> (\(ac,cs02)-> (\(ad,
							 _)-> (Config aa ab ac ad, etc))
						      (fromContents cs02))
					(fromContents cs01))
			  (fromContents cs00))
	    (fromContents cs)
    toContents v@(Config aa ab ac ad) =
	[mkElemC (showConstr 0 (toHType v)) (concat [toContents aa,
						     toContents ab,toContents ac,toContents ad])]

--  Imported from other files :-
