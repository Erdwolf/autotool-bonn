-- -*- mode: haskell -*-

--   $Id$

module Grammatik.Type 

( module Grammatik.Type
, module Autolib.Set
)

where


import Autolib.Set
import Autolib.Size
import Autolib.ToDoc
import Autolib.Reader

import Data.Typeable
import Text.XML.HaXml.Haskell2Xml

data Grammatik = Grammatik
	       { terminale      :: Set Char
	       , nichtterminale :: Set Char
	       , startsymbol	:: Char
	       , regeln		:: Set (String, String) 
	       }
         deriving ( Typeable )

{-! for Grammatik derive: ToDoc, Reader, Haskell2Xml !-}

terms = setToList . terminale
vars  = setToList . nichtterminale
rules = setToList . regeln

instance Show Grammatik where show = render . toDoc
instance Read Grammatik where readsPrec = parsec_readsPrec

instance Size Grammatik where size = cardinality . regeln




